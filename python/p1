#!/usr/bin/python

import calendar
import time
import sys
import random
import math 
import os

print "test 123"
a, b, c, d, e  = "12", 2, 5, "abcdefghijk", "EREEEEEEEE"
#del a     TO delete the object


a = 121212
print(a)  
print(d)

print (d +  "sdfsdsdsdsd" + e)
print ("first character " + d[0] )
print (d[0:])
print (d[2:])

complex_number = 4j
print (complex_number*complex_number)



dict = {}
dict['one'] = "This is one"
dict[2]     = "This is two"

tinydict = {'name': 'john','code':6734, 'dept': 'sales'}


print (dict['one'])       # Prints value for 'one' key
print (dict[2])           # Prints value for 2 key
print (tinydict)          # Prints complete dictionary
print (tinydict.keys())   # Prints all the keys
print (tinydict.values()) # Prints all the values

tinydictlist1 = list(tinydict)


print (tinydictlist1)

print "tinydictlist1 again "

tinydictlist1[0]="lalala"

print "tinydictlist1 again 2 "
print (tinydictlist1)

print "tuples"
tinydictlist1tupe = tuple(tinydictlist1)
print tinydictlist1tupe

####tinydictlist1tupe[0]="alalal"    => tuple cant be changed

letters = ["a", "b", "c", "d", "a"]
letter1 = "a"
if letter1 in letters:
 print "YES"
else:
 print "NO"

if letters[0] is letters[4]:
 print "Sifirinci dorduncuye esit"
else:
 print "Sifirinci dorduncuye esit degil"

for i in range(7,100,4):
 print i

list=[1,2,3,4]
it = iter(list) # this builds an iterarot object
print next(it), "next "  #prints the available element in iterator
print (next(it), "next" ) 
 


for x in it:
   print (x, " ")

# while True:
#   try:
#      print (next(it))
#   except StopIteration:
#      sys.exit() #you have to import sys module for this

#Generator function here


# def fibonacci(n): #generator function
#    a, b, counter = 0, 1, 0
#    while True:
#        if (counter > n): 
#            return
#        yield a
#        a, b = b, a + b
#        counter += 1
#f = fibonacci(7) #f is iterator object
# while True:
#   try:
#      print (next(f), " ")
#   except StopIteration:
#      sys.exit()



list2=[1, 2, 3, 4, 5, 6, 7, 8]
#for i in list2:
# print i*2

list2it1 = iter(list2)
print next(list2it1)
print next(list2it1)

var1, var2, var3 = "a1" ," b2", "c3"
del var1, var2
var1=2
print var1, var3



print  random.choice([1, 2, 4, 5, 6])

listr3=[1, 2, 3, 4, 5, 6, 7, 8]

print listr3
print listr3[4] 
random.seed(1000)
random.shuffle(listr3) 
random.shuffle(listr3)
print listr3

print math.cos(0)

#flag = 1
#while (flag): print 'Given flag is really true!'
#print "Good bye!"

print math.sin(90)

haydarv="Haydar Hiyar midir? "
print haydarv
print haydarv[7:12]
print haydarv[1:13:2]
haydarv2="Elbette hiyardir"
print haydarv + " Bakalim Cevap nedir: "   +   haydarv2

print "ya %s  yogurt    %s "  % ( haydarv , haydarv2 )


str1="bu bir testtir"
print str1.capitalize()
print str1.center(40, '*')
sub1="t"
print str1.count(sub1)
print str1.count(sub1, 5, 8) 
print str1[0:8]
print str1[0:8:2]
print str1.endswith("i")
print str1.find("te")
print "min " +  min(str1)
print "max: " + max(str1)
print "rstrip: " +  str1.rstrip()
str2 = "Line1-abcdef \nLine2-abc \nLine4-abcd";
print str2.split('Lin',3 )
#print str2.split(' d ', 0 )
print str1.upper() + str2.upper()

print os.path.exists('x')

#fil = sys.argv[1]
#with open(fil) as f:
#    for line in f:
#        if os.path.exists(line.rstrip('\n')):
#         os.remove(line.rstrip('\n'))
#####################
#fname = sys.argv[1]
#if os.path.exists(fname):
# print fname + " file exists!"
#else:
# print fname + " doesnt exist!"

print time.ctime() 
#time.sleep(1)
print calendar.isleap(2017)
print time.clock()
print "ctime" + time.ctime()
lalala = time.gmtime()
print lalala

def firstfunc( str1 ):
 print "this and : " + str1
 
firstfunc("lalalalalala")


def secondfunct( str2 ):
 return "Ilave : " + str2
result2 = secondfunct("lololo")
print result2

####################
# Function definition is here
def changeme( mylist ):
   "This changes a passed list into this function"
   mylist = [1,2,3,4]; # This would assig new reference in mylist
   print "Values inside the function: ", mylist
   return

# Now you can call changeme function
mylist = [10,20,30];
changeme( mylist );
print "Values outside the function: ", mylist
##################################################################

# Function definition is here
def printinfo( arg1,  *vartuple ):
   "This prints a variable passed arguments"
   print "Output is: "
   print arg1
   for var in vartuple:
      print var
   return;

# Now you can call printinfo function
printinfo( 10 )
printinfo( 70, 60, 50 )
##############################################

# Import built-in module math
import math

content = dir(math)
content1 = dir(os)
print content, content1
#################################
#globa =  globals()
#print globals      DOESNT WORK
#############################
import di
contentz = dir(di)
print "contentz: " , contentz

dict1 = {'Name': 'Zara', 'Age': 7};
dict2 = {'Name': 'Mahnaz', 'Age': 27};
dict3 = {'Name': 'Abid', 'Age': 27};
dict4 = {'Name': 'Zara', 'Age': 7};
print "Return Value : %d" %  cmp (dict1, dict2)
print "Return Value : %d" %  cmp (dict2, dict3)
print "Return Value : %d" %  cmp (dict1, dict4)


def KelvinToFahrenheit(Temperature):
   assert (Temperature >= 0),"Colder than absolute zero!"
   return ((Temperature-273)*1.8)+32
print KelvinToFahrenheit(273)
print int(KelvinToFahrenheit(505.78))
#print KelvinToFahrenheit(-5)

try:
   fh = open("testfile", "w")
   fh.write("This is my test file for exception handling!!")
except IOError:
   print "Error: can\'t find file or read data"
else:
   print "Written content in the file successfully"
   fh.close()
